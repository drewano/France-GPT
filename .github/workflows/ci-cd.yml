name: Python Application CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: pip install uv

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv pip install --system -r pyproject.toml --extra dev

    - name: Lint with ruff
      run: |
        ruff format --check .
        ruff check .

    - name: Run tests with pytest
      run: pytest

    - name: Build Docker images
      run: |
        cp .env.example .env
        docker-compose build mcp_server agent

  push_to_registry:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define image tags
        id: meta
        run: |
          TAG=$(echo ${{ github.sha }} | head -c 7)
          echo "DOCKER_IMAGE_AGENT=ghcr.io/${{ github.repository_owner }}/france-gpt-agent-ui:$TAG" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_MCP=ghcr.io/${{ github.repository_owner }}/france-gpt-mcp-server:$TAG" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          cp .env.example .env
          docker-compose -f docker-compose.yml build
          docker tag france-gpt-agent-ui ${{ env.DOCKER_IMAGE_AGENT }}
          docker tag france-gpt-mcp-server ${{ env.DOCKER_IMAGE_MCP }}
          docker push ${{ env.DOCKER_IMAGE_AGENT }}
          docker push ${{ env.DOCKER_IMAGE_MCP }}