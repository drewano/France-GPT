# Définition des services qui composent l'application
services:

  # --- Service 1: Le serveur MCP ---
  mcp_server:
    container_name: france-gpt-mcp-server
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m src.mcp_server.server
    env_file:
      - .env
    environment:
      - MCP_PORT=8000
    networks:
      - datainclusion-net
    ports:
      - "8000:8000"
      - "8002:8002"
      - "8003:8003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health && curl -f http://localhost:8002/health && curl -f http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- Service 2: L'Agent IA et l'interface Chainlit/FastAPI ---
  agent:
    container_name: france-gpt-ui
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      # --- Configuration existante ---
      - AGENT_PORT=8001
      - MCP_SERVER_HOST_URL=http://mcp_server
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/datainclusion
      - ENVIRONMENT=production
      - CHAINLIT_AUTH_SECRET=${CHAINLIT_AUTH_SECRET}
      - AWS_ACCESS_KEY_ID=${APP_AWS_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${APP_AWS_SECRET_KEY}
      - AWS_DEFAULT_REGION=${APP_AWS_REGION}
      - AWS_ENDPOINT_URL=${DEV_AWS_ENDPOINT}

      # --- AJOUT POUR LANGFUSE ---
      # URL pour que l'agent puisse joindre le conteneur de Langfuse.
      # 'langfuse-web' est le nom du service dans l'autre docker-compose.
      - LANGFUSE_HOST=http://langfuse-web:3000
      # Clés d'API à ajouter dans votre fichier .env
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}

    networks:
      # Réseau interne pour communiquer avec les autres services France-GPT
      - datainclusion-net
      # Réseau partagé pour communiquer avec Langfuse
      - francegpt-langfuse-net
    ports:
      - "8001:8001"
    depends_on:
      mcp_server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # --- Service 3: Base de données PostgreSQL ---
  postgres:
    image: postgres:15-alpine
    container_name: datainclusion-postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=datainclusion
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - datainclusion-net
    ports:
      # Port exposé changé pour éviter un conflit avec le postgres de Langfuse
      - "5433:5432" 
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d datainclusion"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- Service 4: Localstack (simulation S3) ---
  localstack:
    image: localstack/localstack:latest
    container_name: datainclusion-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=eu-central-1
    volumes:
      - ./localstack-script.sh:/etc/localstack/init/ready.d/script.sh
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - datainclusion-net
    healthcheck:
      test: ["CMD", "awslocal", "s3", "ls"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

# Définition des volumes persistants
volumes:
  postgres_data:
    driver: local

# Définition des réseaux
networks:
  datainclusion-net:
    driver: bridge
  # --- AJOUT POUR LANGFUSE ---
  # Déclare que ce réseau est externe et a été créé manuellement
  francegpt-langfuse-net:
    external: true